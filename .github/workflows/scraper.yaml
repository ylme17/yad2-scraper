name: Yad2 Scraper

on:
  schedule:
    - cron: '*/15 3-17 * * *'
    - cron: '*/15 18-20 * * *'
  workflow_dispatch:
    branches:
      - '**'

jobs:
  scraper:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure we fetch all history

      - name: Install chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Install packages
        run: yarn install

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "${{ secrets.GIT_CONFIG_EMAIL }}"

      - name: Run scraper
        id: scraper_run
        run: |
          echo "STARTING SCRAPER STEP"
          export TELEGRAM_API_TOKEN=${{ secrets.TELEGRAM_API_TOKEN }}
          export TELEGRAM_CHAT_ID=${{ secrets.CHAT_ID }}
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
          export PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
          echo "BEFORE yarn scrape: $(ls -la)" # Debug
          yarn scrape
          echo "AFTER yarn scrape: $(ls -la)" # Debug
          echo "AFTER YARN SCRAPE"
          if [ $? -ne 0 ]; then
            echo "Scraper failed!"
            exit 1
          fi
          # Check for new data (example: check if any JSON file was modified)
          has_new_data=false
          changed_files=$(git diff --name-only)
          echo "DEBUG: Changed files: $changed_files"
          echo "DEBUG: git diff status: $?"
          if [[ "$changed_files" =~ .*\.json$ ]]; then
            has_new_data=true
          fi
          echo "::set-output name=has_new_data::$has_new_data"
          echo "SCRAPER_OUTPUT=$has_new_data" >> $GITHUB_OUTPUT # Debug

      - name: Push new json data if needed
        if: steps.scraper_run.outputs.has_new_data == 'true'
        run: |
          echo "Pushing to GitHub..."
          git add .
          DATE=$(date -Iseconds)
          git commit -m "updated data - $DATE"
          git push

